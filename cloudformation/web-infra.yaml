AWSTemplateFormatVersion: 2010-09-09
Description: Creates main resources to build the tools website, including S3, CloudFront, Route53 record sets, dynamodb tables, etc.
Parameters:
  DomainName:
    Description: Domain name for your website (example.com)
    Type: String
    ConstraintDescription: Must be a web domain, ending in .com. Can include lower case letters, numbers and hypens.
    Default: tools.ewelists.com
  SSLCertificateIdParameterVersion:
    Description: Version number of the parameter which stores the SSL certificate ID.
    Type: String
    Default: 1
  Environment:
    Description: Environment type.
    Default: test
    Type: String
    AllowedValues:
      - prod
      - staging
      - dev
      - test
    ConstraintDescription: must specify prod, staging, dev or test.

Conditions:
  Prod: !Equals [ !Ref Environment, prod ]

Resources:
  LoggingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !If [Prod, !Sub "${DomainName}-logging", !Sub "${Environment}.${DomainName}-logging"]
      AccessControl: LogDeliveryWrite
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: Logs expiration
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            ExpirationInDays: 30
            Prefix: ""
            Status: Enabled

  WebBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !If [Prod, !Ref DomainName, !Sub "${Environment}.${DomainName}"]
      AccessControl: Private
      LoggingConfiguration:
        DestinationBucketName: !Ref LoggingBucket
        LogFilePrefix: !If [Prod, !Sub 's3-${DomainName}-logs/', !Sub 's3-${Environment}.${DomainName}-logs/']
      MetricsConfigurations:
        - Id: EntireBucket
      WebsiteConfiguration:
        IndexDocument: "index.html"
        RoutingRules:
        - RedirectRule:
            HostName: !If [Prod, !Ref DomainName, !Sub "${Environment}.${DomainName}"]
            ReplaceKeyWith: ""
          RoutingRuleCondition:
            HttpErrorCodeReturnedEquals: "403"

  WebBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Bucket: !Ref WebBucket
      PolicyDocument:
        Id: PolicyForCloudFrontPrivateContent
        Version: 2012-10-17
        Statement:
          - Sid: CloudFrontGetBucketObjects
            Effect: Allow
            Action: 's3:GetObject'
            Resource: !Sub 'arn:aws:s3:::${WebBucket}/*'
            Principal:
              AWS: !Sub
                arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity
                ${WebBucketOriginAccessIdentity}

  WebBucketOriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'OAI for ${WebBucket}'

  WebDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - DomainName: !Sub '${WebBucket}.s3.amazonaws.com'
          Id: !Sub 'S3-${WebBucket}'
          S3OriginConfig:
            OriginAccessIdentity: !Sub >-
              origin-access-identity/cloudfront/${WebBucketOriginAccessIdentity}
        Enabled: true
        Comment: "CDN for tools bucket."
        DefaultRootObject: index.html
        HttpVersion: http2
        Logging:
          IncludeCookies: false
          Bucket: !GetAtt LoggingBucket.DomainName
          Prefix: !Sub 'cf-${WebBucket}-logs/'
        Aliases:
          - !Ref WebBucket
        DefaultCacheBehavior:
          TargetOriginId: !Sub 'S3-${WebBucket}'
          Compress: true
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        CustomErrorResponses:
        - ErrorCode: 403
          ResponsePagePath: "/index.html"
          ResponseCode: 200
          ErrorCachingMinTTL: 300
        - ErrorCode: 404
          ResponsePagePath: "/index.html"
          ResponseCode: 200
          ErrorCachingMinTTL: 300
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Sub 'arn:aws:acm:us-east-1:${AWS::AccountId}:certificate/{{resolve:ssm:/${DomainName}/${Environment}/SSLCertificateId:${SSLCertificateIdParameterVersion}}}'
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.1_2016

  WebsiteDNSName:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Join [ '', [ !Ref WebBucket, "." ] ]
      RecordSets:
      - Name: !Ref 'WebBucket'
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: !GetAtt [WebDistribution, DomainName]


Outputs:
  WebCloudFrontUrl:
    Description: The URL for the CloudFront distribution of the main site bucket.
    Value: !Sub
      - https://${Domain}
      - { Domain: !GetAtt WebDistribution.DomainName }
  WebCloudFrontID:
    Description: The ID for the CloudFront distribution of the main site bucket.
    Value: !Ref WebDistribution
